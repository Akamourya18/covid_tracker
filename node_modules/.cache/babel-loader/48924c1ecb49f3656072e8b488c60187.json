{"ast":null,"code":"var _classCallCheck = require(\"D:/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"D:/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\n/*!\r\n  * Bootstrap base-component.js v5.0.1 (https://getbootstrap.com/)\r\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\r\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\r\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('./dom/data.js'), require('./dom/selector-engine.js'), require('./dom/event-handler.js')) : typeof define === 'function' && define.amd ? define(['./dom/data', './dom/selector-engine', './dom/event-handler'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Base = factory(global.Data, global.SelectorEngine, global.EventHandler));\n})(this, function (Data, SelectorEngine, EventHandler) {\n  'use strict';\n\n  function _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n      'default': e\n    };\n  }\n\n  var Data__default = /*#__PURE__*/_interopDefaultLegacy(Data);\n\n  var SelectorEngine__default = /*#__PURE__*/_interopDefaultLegacy(SelectorEngine);\n\n  var EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n\n  var MILLISECONDS_MULTIPLIER = 1000;\n  var TRANSITION_END = 'transitionend'; // Shoutout AngusCroll (https://goo.gl/pxwQGp)\n\n  var getTransitionDurationFromElement = function getTransitionDurationFromElement(element) {\n    if (!element) {\n      return 0;\n    } // Get transition-duration of the element\n\n\n    var _window$getComputedSt = window.getComputedStyle(element),\n        transitionDuration = _window$getComputedSt.transitionDuration,\n        transitionDelay = _window$getComputedSt.transitionDelay;\n\n    var floatTransitionDuration = Number.parseFloat(transitionDuration);\n    var floatTransitionDelay = Number.parseFloat(transitionDelay); // Return 0 if element or transition duration is not found\n\n    if (!floatTransitionDuration && !floatTransitionDelay) {\n      return 0;\n    } // If multiple durations are defined, take the first\n\n\n    transitionDuration = transitionDuration.split(',')[0];\n    transitionDelay = transitionDelay.split(',')[0];\n    return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;\n  };\n\n  var triggerTransitionEnd = function triggerTransitionEnd(element) {\n    element.dispatchEvent(new Event(TRANSITION_END));\n  };\n\n  var isElement = function isElement(obj) {\n    if (!obj || typeof obj !== 'object') {\n      return false;\n    }\n\n    if (typeof obj.jquery !== 'undefined') {\n      obj = obj[0];\n    }\n\n    return typeof obj.nodeType !== 'undefined';\n  };\n\n  var getElement = function getElement(obj) {\n    if (isElement(obj)) {\n      // it's a jQuery object or a node element\n      return obj.jquery ? obj[0] : obj;\n    }\n\n    if (typeof obj === 'string' && obj.length > 0) {\n      return SelectorEngine__default['default'].findOne(obj);\n    }\n\n    return null;\n  };\n\n  var emulateTransitionEnd = function emulateTransitionEnd(element, duration) {\n    var called = false;\n    var durationPadding = 5;\n    var emulatedDuration = duration + durationPadding;\n\n    function listener() {\n      called = true;\n      element.removeEventListener(TRANSITION_END, listener);\n    }\n\n    element.addEventListener(TRANSITION_END, listener);\n    setTimeout(function () {\n      if (!called) {\n        triggerTransitionEnd(element);\n      }\n    }, emulatedDuration);\n  };\n\n  var execute = function execute(callback) {\n    if (typeof callback === 'function') {\n      callback();\n    }\n  };\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * Bootstrap (v5.0.1): base-component.js\r\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  /**\r\n   * ------------------------------------------------------------------------\r\n   * Constants\r\n   * ------------------------------------------------------------------------\r\n   */\n\n\n  var VERSION = '5.0.1';\n\n  var BaseComponent = /*#__PURE__*/function () {\n    function BaseComponent(element) {\n      _classCallCheck(this, BaseComponent);\n\n      element = getElement(element);\n\n      if (!element) {\n        return;\n      }\n\n      this._element = element;\n      Data__default['default'].set(this._element, this.constructor.DATA_KEY, this);\n    }\n\n    _createClass(BaseComponent, [{\n      key: \"dispose\",\n      value: function dispose() {\n        var _this = this;\n\n        Data__default['default'].remove(this._element, this.constructor.DATA_KEY);\n        EventHandler__default['default'].off(this._element, this.constructor.EVENT_KEY);\n        Object.getOwnPropertyNames(this).forEach(function (propertyName) {\n          _this[propertyName] = null;\n        });\n      }\n    }, {\n      key: \"_queueCallback\",\n      value: function _queueCallback(callback, element) {\n        var isAnimated = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n        if (!isAnimated) {\n          execute(callback);\n          return;\n        }\n\n        var transitionDuration = getTransitionDurationFromElement(element);\n        EventHandler__default['default'].one(element, 'transitionend', function () {\n          return execute(callback);\n        });\n        emulateTransitionEnd(element, transitionDuration);\n      }\n      /** Static */\n\n    }], [{\n      key: \"getInstance\",\n      value: function getInstance(element) {\n        return Data__default['default'].get(element, this.DATA_KEY);\n      }\n    }, {\n      key: \"VERSION\",\n      get: function get() {\n        return VERSION;\n      }\n    }, {\n      key: \"NAME\",\n      get: function get() {\n        throw new Error('You have to implement the static method \"NAME\", for each component!');\n      }\n    }, {\n      key: \"DATA_KEY\",\n      get: function get() {\n        return \"bs.\".concat(this.NAME);\n      }\n    }, {\n      key: \"EVENT_KEY\",\n      get: function get() {\n        return \".\".concat(this.DATA_KEY);\n      }\n    }]);\n\n    return BaseComponent;\n  }();\n\n  return BaseComponent;\n});","map":{"version":3,"sources":["../src/util/index.js","../src/base-component.js"],"names":["MILLISECONDS_MULTIPLIER","TRANSITION_END","getTransitionDurationFromElement","element","transitionDelay","window","floatTransitionDuration","Number","floatTransitionDelay","transitionDuration","triggerTransitionEnd","isElement","obj","getElement","SelectorEngine","emulateTransitionEnd","called","durationPadding","emulatedDuration","duration","setTimeout","execute","callback","VERSION","constructor","Data","dispose","EventHandler","Object","propertyName","_queueCallback","isAnimated","getInstance","NAME","DATA_KEY","EVENT_KEY"],"mappings":"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","sourcesContent":["import SelectorEngine from '../dom/selector-engine'\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.1): util/index.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst MAX_UID = 1000000\nconst MILLISECONDS_MULTIPLIER = 1000\nconst TRANSITION_END = 'transitionend'\n\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\nconst toType = obj => {\n  if (obj === null || obj === undefined) {\n    return `${obj}`\n  }\n\n  return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\n\nconst getUID = prefix => {\n  do {\n    prefix += Math.floor(Math.random() * MAX_UID)\n  } while (document.getElementById(prefix))\n\n  return prefix\n}\n\nconst getSelector = element => {\n  let selector = element.getAttribute('data-bs-target')\n\n  if (!selector || selector === '#') {\n    let hrefAttr = element.getAttribute('href')\n\n    // The only valid content that could double as a selector are IDs or classes,\n    // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n    // `document.querySelector` will rightfully complain it is invalid.\n    // See https://github.com/twbs/bootstrap/issues/32273\n    if (!hrefAttr || (!hrefAttr.includes('#') && !hrefAttr.startsWith('.'))) {\n      return null\n    }\n\n    // Just in case some CMS puts out a full URL with the anchor appended\n    if (hrefAttr.includes('#') && !hrefAttr.startsWith('#')) {\n      hrefAttr = `#${hrefAttr.split('#')[1]}`\n    }\n\n    selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : null\n  }\n\n  return selector\n}\n\nconst getSelectorFromElement = element => {\n  const selector = getSelector(element)\n\n  if (selector) {\n    return document.querySelector(selector) ? selector : null\n  }\n\n  return null\n}\n\nconst getElementFromSelector = element => {\n  const selector = getSelector(element)\n\n  return selector ? document.querySelector(selector) : null\n}\n\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element)\n\n  const floatTransitionDuration = Number.parseFloat(transitionDuration)\n  const floatTransitionDelay = Number.parseFloat(transitionDelay)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n  transitionDelay = transitionDelay.split(',')[0]\n\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n}\n\nconst triggerTransitionEnd = element => {\n  element.dispatchEvent(new Event(TRANSITION_END))\n}\n\nconst isElement = obj => {\n  if (!obj || typeof obj !== 'object') {\n    return false\n  }\n\n  if (typeof obj.jquery !== 'undefined') {\n    obj = obj[0]\n  }\n\n  return typeof obj.nodeType !== 'undefined'\n}\n\nconst getElement = obj => {\n  if (isElement(obj)) { // it's a jQuery object or a node element\n    return obj.jquery ? obj[0] : obj\n  }\n\n  if (typeof obj === 'string' && obj.length > 0) {\n    return SelectorEngine.findOne(obj)\n  }\n\n  return null\n}\n\nconst emulateTransitionEnd = (element, duration) => {\n  let called = false\n  const durationPadding = 5\n  const emulatedDuration = duration + durationPadding\n\n  function listener() {\n    called = true\n    element.removeEventListener(TRANSITION_END, listener)\n  }\n\n  element.addEventListener(TRANSITION_END, listener)\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(element)\n    }\n  }, emulatedDuration)\n}\n\nconst typeCheckConfig = (componentName, config, configTypes) => {\n  Object.keys(configTypes).forEach(property => {\n    const expectedTypes = configTypes[property]\n    const value = config[property]\n    const valueType = value && isElement(value) ? 'element' : toType(value)\n\n    if (!new RegExp(expectedTypes).test(valueType)) {\n      throw new TypeError(\n        `${componentName.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`\n      )\n    }\n  })\n}\n\nconst isVisible = element => {\n  if (!element) {\n    return false\n  }\n\n  if (element.style && element.parentNode && element.parentNode.style) {\n    const elementStyle = getComputedStyle(element)\n    const parentNodeStyle = getComputedStyle(element.parentNode)\n\n    return elementStyle.display !== 'none' &&\n      parentNodeStyle.display !== 'none' &&\n      elementStyle.visibility !== 'hidden'\n  }\n\n  return false\n}\n\nconst isDisabled = element => {\n  if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n    return true\n  }\n\n  if (element.classList.contains('disabled')) {\n    return true\n  }\n\n  if (typeof element.disabled !== 'undefined') {\n    return element.disabled\n  }\n\n  return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false'\n}\n\nconst findShadowRoot = element => {\n  if (!document.documentElement.attachShadow) {\n    return null\n  }\n\n  // Can find the shadow root otherwise it'll return the document\n  if (typeof element.getRootNode === 'function') {\n    const root = element.getRootNode()\n    return root instanceof ShadowRoot ? root : null\n  }\n\n  if (element instanceof ShadowRoot) {\n    return element\n  }\n\n  // when we don't find a shadow root\n  if (!element.parentNode) {\n    return null\n  }\n\n  return findShadowRoot(element.parentNode)\n}\n\nconst noop = () => {}\n\nconst reflow = element => element.offsetHeight\n\nconst getjQuery = () => {\n  const { jQuery } = window\n\n  if (jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n    return jQuery\n  }\n\n  return null\n}\n\nconst onDOMContentLoaded = callback => {\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', callback)\n  } else {\n    callback()\n  }\n}\n\nconst isRTL = () => document.documentElement.dir === 'rtl'\n\nconst defineJQueryPlugin = plugin => {\n  onDOMContentLoaded(() => {\n    const $ = getjQuery()\n    /* istanbul ignore if */\n    if ($) {\n      const name = plugin.NAME\n      const JQUERY_NO_CONFLICT = $.fn[name]\n      $.fn[name] = plugin.jQueryInterface\n      $.fn[name].Constructor = plugin\n      $.fn[name].noConflict = () => {\n        $.fn[name] = JQUERY_NO_CONFLICT\n        return plugin.jQueryInterface\n      }\n    }\n  })\n}\n\nconst execute = callback => {\n  if (typeof callback === 'function') {\n    callback()\n  }\n}\n\nexport {\n  getElement,\n  getUID,\n  getSelectorFromElement,\n  getElementFromSelector,\n  getTransitionDurationFromElement,\n  triggerTransitionEnd,\n  isElement,\n  emulateTransitionEnd,\n  typeCheckConfig,\n  isVisible,\n  isDisabled,\n  findShadowRoot,\n  noop,\n  reflow,\n  getjQuery,\n  onDOMContentLoaded,\n  isRTL,\n  defineJQueryPlugin,\n  execute\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.1): base-component.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Data from './dom/data'\nimport {\n  emulateTransitionEnd,\n  execute,\n  getElement,\n  getTransitionDurationFromElement\n} from './util/index'\nimport EventHandler from './dom/event-handler'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst VERSION = '5.0.1'\n\nclass BaseComponent {\n  constructor(element) {\n    element = getElement(element)\n\n    if (!element) {\n      return\n    }\n\n    this._element = element\n    Data.set(this._element, this.constructor.DATA_KEY, this)\n  }\n\n  dispose() {\n    Data.remove(this._element, this.constructor.DATA_KEY)\n    EventHandler.off(this._element, this.constructor.EVENT_KEY)\n\n    Object.getOwnPropertyNames(this).forEach(propertyName => {\n      this[propertyName] = null\n    })\n  }\n\n  _queueCallback(callback, element, isAnimated = true) {\n    if (!isAnimated) {\n      execute(callback)\n      return\n    }\n\n    const transitionDuration = getTransitionDurationFromElement(element)\n    EventHandler.one(element, 'transitionend', () => execute(callback))\n\n    emulateTransitionEnd(element, transitionDuration)\n  }\n\n  /** Static */\n\n  static getInstance(element) {\n    return Data.get(element, this.DATA_KEY)\n  }\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get NAME() {\n    throw new Error('You have to implement the static method \"NAME\", for each component!')\n  }\n\n  static get DATA_KEY() {\n    return `bs.${this.NAME}`\n  }\n\n  static get EVENT_KEY() {\n    return `.${this.DATA_KEY}`\n  }\n}\n\nexport default BaseComponent\n"]},"metadata":{},"sourceType":"script"}